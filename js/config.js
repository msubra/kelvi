// Generated by CoffeeScript 1.6.3
var GlobalConfig, compareAndCopy, dabba, getConfig, jaadi, loadConfig, saveConfig, updateConfig;

try {
  jaadi = Jaadi.createInstance("localstorage");
} catch (_error) {
  jaadi = Jaadi.createInstance("dom");
}

dabba = jaadi;

GlobalConfig = {
  usertopics: ['java', 'jquery', 'javascript', 'python'],
  useUserSettings: false,
  "default": {
    questionsCount: 8,
    refreshRate: 10 * 60 * 1000,
    watches: {
      "active": {
        "title": "active",
        "category": "active",
        "url": "https://api.stackoverflow.com/1.1/questions",
        "query": {
          "tagged": "__TOPIC__"
        },
        "show": true,
        "enable": true
      },
      "new": {
        "title": "new",
        "category": "new",
        "url": "https://api.stackoverflow.com/1.1/questions",
        "query": {
          "sort": "creation",
          "order": "desc",
          "tagged": "__TOPIC__"
        },
        "show": false,
        "enable": true
      },
      "featured": {
        "title": "featured",
        "category": "featured",
        "url": "https://api.stackoverflow.com/1.1/questions",
        "query": {
          "sort": "featured",
          "order": "asc",
          "tagged": "__TOPIC__"
        },
        "show": false,
        "enable": true
      },
      "unanswered": {
        "title": "unanswered",
        "category": "unanswered",
        "url": "https://api.stackoverflow.com/1.1/questions/no-answers",
        "query": {
          "sort": "votes",
          "order": "desc",
          "tagged": "__TOPIC__",
          "pagesize": 50
        },
        "show": false,
        "enable": true
      }
    }
  },
  topics: {
    java: {
      topic: "java"
    },
    jquery: {
      topic: "jquery"
    },
    javascript: {
      topic: "javascript"
    },
    python: {
      topic: "python"
    }
  }
};

saveConfig = function() {
  return dabba.put("KelviCfg", GlobalConfig);
};

loadConfig = function() {
  var cfg, k, topic, _ref, _results;
  if (dabba.get("KelviCfg") !== null) {
    return GlobalConfig = dabba.get("KelviCfg");
  } else {
    _ref = GlobalConfig.topics;
    _results = [];
    for (k in _ref) {
      topic = _ref[k];
      cfg = getConfig(k);
      _results.push(GlobalConfig.topics[k] = cfg);
    }
    return _results;
  }
};

updateConfig = function(topic) {
  GlobalConfig.topics[topic] = {
    "topic": topic
  };
  GlobalConfig.topics[topic] = getConfig(topic);
  return saveConfig();
};

compareAndCopy = function(target_map, default_map) {
  var k, v;
  for (k in default_map) {
    v = default_map[k];
    if (!(k in target_map)) {
      if (typeof v === "object") {
        target_map[k] = jQuery.extend(true, {}, v);
      } else {
        target_map[k] = v;
      }
    } else {
      if (typeof v === "object") {
        compareAndCopy(target_map[k], v);
      }
    }
  }
  return target_map;
};

getConfig = function(topic) {
  var cfg, cloned_cfg, common_cfg, k, w, _ref;
  common_cfg = GlobalConfig["default"];
  if (topic in GlobalConfig.topics) {
    cfg = GlobalConfig.topics[topic];
    cloned_cfg = jQuery.extend(true, {}, cfg);
    cloned_cfg = compareAndCopy(cloned_cfg, common_cfg);
    _ref = cloned_cfg.watches;
    for (k in _ref) {
      w = _ref[k];
      w.query.tagged = topic;
    }
    return cloned_cfg;
  }
  return common_cfg;
};

loadConfig();
